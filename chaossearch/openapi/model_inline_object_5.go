/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject5 struct for InlineObject5
type InlineObject5 struct {
	// Object Group name 
	BucketName *string `json:"BucketName,omitempty"`
	// Integer to represent the state(s) of the model  1 => Restart Indexing  0 => Start Indexing  -1 => Stop Indexing  -2 => Terminate Indexing 
	ModelMode *int32 `json:"ModelMode,omitempty"`
}

// NewInlineObject5 instantiates a new InlineObject5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject5() *InlineObject5 {
	this := InlineObject5{}
	return &this
}

// NewInlineObject5WithDefaults instantiates a new InlineObject5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject5WithDefaults() *InlineObject5 {
	this := InlineObject5{}
	return &this
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *InlineObject5) GetBucketName() string {
	if o == nil || o.BucketName == nil {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5) GetBucketNameOk() (*string, bool) {
	if o == nil || o.BucketName == nil {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *InlineObject5) HasBucketName() bool {
	if o != nil && o.BucketName != nil {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *InlineObject5) SetBucketName(v string) {
	o.BucketName = &v
}

// GetModelMode returns the ModelMode field value if set, zero value otherwise.
func (o *InlineObject5) GetModelMode() int32 {
	if o == nil || o.ModelMode == nil {
		var ret int32
		return ret
	}
	return *o.ModelMode
}

// GetModelModeOk returns a tuple with the ModelMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject5) GetModelModeOk() (*int32, bool) {
	if o == nil || o.ModelMode == nil {
		return nil, false
	}
	return o.ModelMode, true
}

// HasModelMode returns a boolean if a field has been set.
func (o *InlineObject5) HasModelMode() bool {
	if o != nil && o.ModelMode != nil {
		return true
	}

	return false
}

// SetModelMode gets a reference to the given int32 and assigns it to the ModelMode field.
func (o *InlineObject5) SetModelMode(v int32) {
	o.ModelMode = &v
}

func (o InlineObject5) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BucketName != nil {
		toSerialize["BucketName"] = o.BucketName
	}
	if o.ModelMode != nil {
		toSerialize["ModelMode"] = o.ModelMode
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject5 struct {
	value *InlineObject5
	isSet bool
}

func (v NullableInlineObject5) Get() *InlineObject5 {
	return v.value
}

func (v *NullableInlineObject5) Set(val *InlineObject5) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject5) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject5(val *InlineObject5) *NullableInlineObject5 {
	return &NullableInlineObject5{value: val, isSet: true}
}

func (v NullableInlineObject5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


