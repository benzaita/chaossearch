/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ViewTimeWindow struct for ViewTimeWindow
type ViewTimeWindow struct {
	TimeWindow int
}

// NewViewTimeWindow instantiates a new ViewTimeWindow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewViewTimeWindow() *ViewTimeWindow {
	this := ViewTimeWindow{}
	return &this
}

// NewViewTimeWindowWithDefaults instantiates a new ViewTimeWindow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewViewTimeWindowWithDefaults() *ViewTimeWindow {
	this := ViewTimeWindow{}
	return &this
}

func (o ViewTimeWindow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedTimeWindow, errTimeWindow := json.Marshal(o.TimeWindow)
	if errTimeWindow != nil {
		return []byte{}, errTimeWindow
	}
	errTimeWindow = json.Unmarshal([]byte(serializedTimeWindow), &toSerialize)
	if errTimeWindow != nil {
		return []byte{}, errTimeWindow
	}
	return json.Marshal(toSerialize)
}

type NullableViewTimeWindow struct {
	value *ViewTimeWindow
	isSet bool
}

func (v NullableViewTimeWindow) Get() *ViewTimeWindow {
	return v.value
}

func (v *NullableViewTimeWindow) Set(val *ViewTimeWindow) {
	v.value = val
	v.isSet = true
}

func (v NullableViewTimeWindow) IsSet() bool {
	return v.isSet
}

func (v *NullableViewTimeWindow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableViewTimeWindow(val *ViewTimeWindow) *NullableViewTimeWindow {
	return &NullableViewTimeWindow{value: val, isSet: true}
}

func (v NullableViewTimeWindow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableViewTimeWindow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
