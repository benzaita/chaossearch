/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject7 struct for InlineObject7
type InlineObject7 struct {
	UserInfoBlock *UserCreateSubAccountUserInfoBlock `json:"UserInfoBlock,omitempty"`
	GroupsIds *[]string `json:"GroupsIds,omitempty"`
	Password *string `json:"Password,omitempty"`
	// used to override or set internal fields of the sub-account (please work with ChaosSearch support to use) 
	Hocon *[]string `json:"Hocon,omitempty"`
}

// NewInlineObject7 instantiates a new InlineObject7 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject7() *InlineObject7 {
	this := InlineObject7{}
	return &this
}

// NewInlineObject7WithDefaults instantiates a new InlineObject7 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject7WithDefaults() *InlineObject7 {
	this := InlineObject7{}
	return &this
}

// GetUserInfoBlock returns the UserInfoBlock field value if set, zero value otherwise.
func (o *InlineObject7) GetUserInfoBlock() UserCreateSubAccountUserInfoBlock {
	if o == nil || o.UserInfoBlock == nil {
		var ret UserCreateSubAccountUserInfoBlock
		return ret
	}
	return *o.UserInfoBlock
}

// GetUserInfoBlockOk returns a tuple with the UserInfoBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject7) GetUserInfoBlockOk() (*UserCreateSubAccountUserInfoBlock, bool) {
	if o == nil || o.UserInfoBlock == nil {
		return nil, false
	}
	return o.UserInfoBlock, true
}

// HasUserInfoBlock returns a boolean if a field has been set.
func (o *InlineObject7) HasUserInfoBlock() bool {
	if o != nil && o.UserInfoBlock != nil {
		return true
	}

	return false
}

// SetUserInfoBlock gets a reference to the given UserCreateSubAccountUserInfoBlock and assigns it to the UserInfoBlock field.
func (o *InlineObject7) SetUserInfoBlock(v UserCreateSubAccountUserInfoBlock) {
	o.UserInfoBlock = &v
}

// GetGroupsIds returns the GroupsIds field value if set, zero value otherwise.
func (o *InlineObject7) GetGroupsIds() []string {
	if o == nil || o.GroupsIds == nil {
		var ret []string
		return ret
	}
	return *o.GroupsIds
}

// GetGroupsIdsOk returns a tuple with the GroupsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject7) GetGroupsIdsOk() (*[]string, bool) {
	if o == nil || o.GroupsIds == nil {
		return nil, false
	}
	return o.GroupsIds, true
}

// HasGroupsIds returns a boolean if a field has been set.
func (o *InlineObject7) HasGroupsIds() bool {
	if o != nil && o.GroupsIds != nil {
		return true
	}

	return false
}

// SetGroupsIds gets a reference to the given []string and assigns it to the GroupsIds field.
func (o *InlineObject7) SetGroupsIds(v []string) {
	o.GroupsIds = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *InlineObject7) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject7) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *InlineObject7) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *InlineObject7) SetPassword(v string) {
	o.Password = &v
}

// GetHocon returns the Hocon field value if set, zero value otherwise.
func (o *InlineObject7) GetHocon() []string {
	if o == nil || o.Hocon == nil {
		var ret []string
		return ret
	}
	return *o.Hocon
}

// GetHoconOk returns a tuple with the Hocon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject7) GetHoconOk() (*[]string, bool) {
	if o == nil || o.Hocon == nil {
		return nil, false
	}
	return o.Hocon, true
}

// HasHocon returns a boolean if a field has been set.
func (o *InlineObject7) HasHocon() bool {
	if o != nil && o.Hocon != nil {
		return true
	}

	return false
}

// SetHocon gets a reference to the given []string and assigns it to the Hocon field.
func (o *InlineObject7) SetHocon(v []string) {
	o.Hocon = &v
}

func (o InlineObject7) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserInfoBlock != nil {
		toSerialize["UserInfoBlock"] = o.UserInfoBlock
	}
	if o.GroupsIds != nil {
		toSerialize["GroupsIds"] = o.GroupsIds
	}
	if o.Password != nil {
		toSerialize["Password"] = o.Password
	}
	if o.Hocon != nil {
		toSerialize["Hocon"] = o.Hocon
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject7 struct {
	value *InlineObject7
	isSet bool
}

func (v NullableInlineObject7) Get() *InlineObject7 {
	return v.value
}

func (v *NullableInlineObject7) Set(val *InlineObject7) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject7) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject7) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject7(val *InlineObject7) *NullableInlineObject7 {
	return &NullableInlineObject7{value: val, isSet: true}
}

func (v NullableInlineObject7) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject7) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


