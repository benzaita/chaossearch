/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserCreateSubAccountUserInfoBlock struct for UserCreateSubAccountUserInfoBlock
type UserCreateSubAccountUserInfoBlock struct {
	UserName *string `json:"UserName,omitempty"`
	FullName *string `json:"FullName,omitempty"`
	Email *string `json:"Email,omitempty"`
}

// NewUserCreateSubAccountUserInfoBlock instantiates a new UserCreateSubAccountUserInfoBlock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateSubAccountUserInfoBlock() *UserCreateSubAccountUserInfoBlock {
	this := UserCreateSubAccountUserInfoBlock{}
	return &this
}

// NewUserCreateSubAccountUserInfoBlockWithDefaults instantiates a new UserCreateSubAccountUserInfoBlock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateSubAccountUserInfoBlockWithDefaults() *UserCreateSubAccountUserInfoBlock {
	this := UserCreateSubAccountUserInfoBlock{}
	return &this
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *UserCreateSubAccountUserInfoBlock) GetUserName() string {
	if o == nil || o.UserName == nil {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateSubAccountUserInfoBlock) GetUserNameOk() (*string, bool) {
	if o == nil || o.UserName == nil {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *UserCreateSubAccountUserInfoBlock) HasUserName() bool {
	if o != nil && o.UserName != nil {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *UserCreateSubAccountUserInfoBlock) SetUserName(v string) {
	o.UserName = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *UserCreateSubAccountUserInfoBlock) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateSubAccountUserInfoBlock) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *UserCreateSubAccountUserInfoBlock) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *UserCreateSubAccountUserInfoBlock) SetFullName(v string) {
	o.FullName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserCreateSubAccountUserInfoBlock) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserCreateSubAccountUserInfoBlock) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserCreateSubAccountUserInfoBlock) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserCreateSubAccountUserInfoBlock) SetEmail(v string) {
	o.Email = &v
}

func (o UserCreateSubAccountUserInfoBlock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserName != nil {
		toSerialize["UserName"] = o.UserName
	}
	if o.FullName != nil {
		toSerialize["FullName"] = o.FullName
	}
	if o.Email != nil {
		toSerialize["Email"] = o.Email
	}
	return json.Marshal(toSerialize)
}

type NullableUserCreateSubAccountUserInfoBlock struct {
	value *UserCreateSubAccountUserInfoBlock
	isSet bool
}

func (v NullableUserCreateSubAccountUserInfoBlock) Get() *UserCreateSubAccountUserInfoBlock {
	return v.value
}

func (v *NullableUserCreateSubAccountUserInfoBlock) Set(val *UserCreateSubAccountUserInfoBlock) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateSubAccountUserInfoBlock) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateSubAccountUserInfoBlock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateSubAccountUserInfoBlock(val *UserCreateSubAccountUserInfoBlock) *NullableUserCreateSubAccountUserInfoBlock {
	return &NullableUserCreateSubAccountUserInfoBlock{value: val, isSet: true}
}

func (v NullableUserCreateSubAccountUserInfoBlock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateSubAccountUserInfoBlock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


