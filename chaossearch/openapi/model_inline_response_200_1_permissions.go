/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineResponse2001Permissions struct for InlineResponse2001Permissions
type InlineResponse2001Permissions struct {
	Version *string `json:"Version,omitempty"`
	Effect *string `json:"Effect,omitempty"`
	Actions *[]string `json:"Actions,omitempty"`
	Resources *[]string `json:"Resources,omitempty"`
}

// NewInlineResponse2001Permissions instantiates a new InlineResponse2001Permissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2001Permissions() *InlineResponse2001Permissions {
	this := InlineResponse2001Permissions{}
	return &this
}

// NewInlineResponse2001PermissionsWithDefaults instantiates a new InlineResponse2001Permissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2001PermissionsWithDefaults() *InlineResponse2001Permissions {
	this := InlineResponse2001Permissions{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineResponse2001Permissions) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Permissions) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineResponse2001Permissions) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *InlineResponse2001Permissions) SetVersion(v string) {
	o.Version = &v
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *InlineResponse2001Permissions) GetEffect() string {
	if o == nil || o.Effect == nil {
		var ret string
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Permissions) GetEffectOk() (*string, bool) {
	if o == nil || o.Effect == nil {
		return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *InlineResponse2001Permissions) HasEffect() bool {
	if o != nil && o.Effect != nil {
		return true
	}

	return false
}

// SetEffect gets a reference to the given string and assigns it to the Effect field.
func (o *InlineResponse2001Permissions) SetEffect(v string) {
	o.Effect = &v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *InlineResponse2001Permissions) GetActions() []string {
	if o == nil || o.Actions == nil {
		var ret []string
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Permissions) GetActionsOk() (*[]string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *InlineResponse2001Permissions) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *InlineResponse2001Permissions) SetActions(v []string) {
	o.Actions = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *InlineResponse2001Permissions) GetResources() []string {
	if o == nil || o.Resources == nil {
		var ret []string
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Permissions) GetResourcesOk() (*[]string, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *InlineResponse2001Permissions) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *InlineResponse2001Permissions) SetResources(v []string) {
	o.Resources = &v
}

func (o InlineResponse2001Permissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["Version"] = o.Version
	}
	if o.Effect != nil {
		toSerialize["Effect"] = o.Effect
	}
	if o.Actions != nil {
		toSerialize["Actions"] = o.Actions
	}
	if o.Resources != nil {
		toSerialize["Resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2001Permissions struct {
	value *InlineResponse2001Permissions
	isSet bool
}

func (v NullableInlineResponse2001Permissions) Get() *InlineResponse2001Permissions {
	return v.value
}

func (v *NullableInlineResponse2001Permissions) Set(val *InlineResponse2001Permissions) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2001Permissions) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2001Permissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2001Permissions(val *InlineResponse2001Permissions) *NullableInlineResponse2001Permissions {
	return &NullableInlineResponse2001Permissions{value: val, isSet: true}
}

func (v NullableInlineResponse2001Permissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2001Permissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


