/*
 * ChaosSearch API
 *
 * The ChaosSearch API is the administrative interface for the ChaosSearch service.  It is composed of ChaosSearch and AWS style interfaces (built to provide interoperability with the S3 service).  ChaosSearch admin API was originally modeled as an extension to the S3 API. Most of the API calls, parameters, etc will look familiar to those familiar with creating and managing S3 Buckets. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// XmlResponse struct for XmlResponse
type XmlResponse struct {
	Document *string `json:"document,omitempty"`
}

// NewXmlResponse instantiates a new XmlResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXmlResponse() *XmlResponse {
	this := XmlResponse{}
	return &this
}

// NewXmlResponseWithDefaults instantiates a new XmlResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXmlResponseWithDefaults() *XmlResponse {
	this := XmlResponse{}
	return &this
}

// GetDocument returns the Document field value if set, zero value otherwise.
func (o *XmlResponse) GetDocument() string {
	if o == nil || o.Document == nil {
		var ret string
		return ret
	}
	return *o.Document
}

// GetDocumentOk returns a tuple with the Document field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XmlResponse) GetDocumentOk() (*string, bool) {
	if o == nil || o.Document == nil {
		return nil, false
	}
	return o.Document, true
}

// HasDocument returns a boolean if a field has been set.
func (o *XmlResponse) HasDocument() bool {
	if o != nil && o.Document != nil {
		return true
	}

	return false
}

// SetDocument gets a reference to the given string and assigns it to the Document field.
func (o *XmlResponse) SetDocument(v string) {
	o.Document = &v
}

func (o XmlResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Document != nil {
		toSerialize["document"] = o.Document
	}
	return json.Marshal(toSerialize)
}

type NullableXmlResponse struct {
	value *XmlResponse
	isSet bool
}

func (v NullableXmlResponse) Get() *XmlResponse {
	return v.value
}

func (v *NullableXmlResponse) Set(val *XmlResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableXmlResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableXmlResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXmlResponse(val *XmlResponse) *NullableXmlResponse {
	return &NullableXmlResponse{value: val, isSet: true}
}

func (v NullableXmlResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXmlResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


